package CodeJam2019.Qualification.Cryptopangrams

object GenerateTest extends App {
  //val n = BigInt("8714772976381697859557965355791745997987728300226812732519702250463329265826033268926171610392211750044957719896320776794555146581");
  //val primes = List(BigInt("35201546659608842026088328007565866231962578784643756647773109869245232364730066609837018108561065242031153677"),BigInt("10513733234846849736873637829838635104309714688896631127438692162131857778044158273164093838937083421380041997"),BigInt("24684249032065892333066123534168930441269525239006410135714283699648991959894332868446109170827166448301044689"),BigInt("76921421106760125285550929240903354966370431827792714920086011488103952094969175731459908117375995349245839343"),BigInt("32998886283809577512914881459957314326750856532546837122557861905096711274255431870995137546575954361422085081"),BigInt("30925729459015376480470394633122420870296099995740154747268426836472045107181955644451858184784072167623952123"),BigInt("14083359469338511572632447718747493405040362318205860500297736061630222431052998057250747900577940212317413063"),BigInt("10422980533212493227764163121880874101060283221003967986026457372472702684601194916229693974417851408689550781"),BigInt("36261430139487433507414165833468680972181038593593271409697364115931523786727274410257181186996611100786935727"),BigInt("15579763548573297857414066649875054392128789371879472432457450095645164702139048181789700140949438093329334293"),BigInt("499490918065850301921197603564081112780623690273420984342968690594064612108591217229304461006005170865294466527166368851"),BigInt("527654088646108540362982390044019863852553381756839064739589507767331089783254199732302674718497125124586822562788766953"),BigInt("171989218832470870857923701742780850419373475175043795375607676047792517311566339217543754147263751973899368604441353849"),BigInt("566039327581077714561506815784669881914684785030580378761402844355426865405282719619236551816895924694614829004713040283"),BigInt("897503957504227472139484199430066010338139343163145419280183314291067450988520718807102741476596034735471026312154231263"),BigInt("745213698191737003631319694753125429293968166002970537936165661845575001172678049743806549549977234670072449443569701103"),BigInt("420145406901811857791227072284165226561693483222287527567496017033892563342686752247587935117119306171161848593337649107"),BigInt("371132472088173209741153184981742771278849120163424101995797949338636074962048027958518451774716413729510755717494155299"),BigInt("284563744015440547449076942566482643882733461003510727231069524112903402006758875891142531990667183056335233985448160393"),BigInt("506283312611011343355256478253272463245968105632679003983305635125224133331073348553775052064302641255435067238306718511"),BigInt("5452212151844264453115521770362712815300456788073870260637172006414987479914150831821202259862091373741738511579629040732909194883"),BigInt("6539010935836249262943170849578201335017375258186767902505297465587122376751466876714291620849745334794779375900778144335240097113"),BigInt("3983839527542885537740733863182378190963726188502990729675389352191015499474350038278492444248168771788283801258341599238380122941"),BigInt("1966605170351883122720890324745439659237468374231783680395362721624862483865065649496199746596592488851227128040234894355126333577"),BigInt("8396165654625010853235718432422971894820959019173552531407618141479187464219101476472619790871280738143334218241399043466521187861"),BigInt("8714772976381697859557965355791745997987728300226812732519702250463329265826033268926171610392211750044957719896320776794555146581")).sorted
  val n = 3919
  val primes = List(1663, 1667, 1697, 1699, 1709, 1721, 1867, 1879, 1889, 2053, 2063, 2069, 2131, 2137, 2141, 2143, 2203, 2207, 2213, 2221, 3851, 3853, 3877, 3881, 3889, 3919)
  val plainTexts = List("AAAAABCDEFGHIJKLMNOPQRSTUVWXYZ", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "CJQUIZKNOWBEVYOFDPFLUXALGORITHMS", "SUBDERMATOGLYPHICFJKNQVWXZ")
  println(plainTexts.length)
  for (plain <- plainTexts) {
    println(primes.last + " " + (plain.length - 1))
    println(plain.toCharArray.map(x => primes((x - 'A').toInt)).sliding(2).map(x => x(0)*x(1)).mkString(" "))
  }
}
